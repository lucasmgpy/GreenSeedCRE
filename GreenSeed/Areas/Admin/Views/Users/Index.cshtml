@model IEnumerable<GreenSeed.Models.ApplicationUser>
@using Microsoft.AspNetCore.Identity
@inject UserManager<GreenSeed.Models.ApplicationUser> UserManager

@{
    ViewData["Title"] = "Gerenciar Usuários";
}

<h1>@ViewData["Title"]</h1>

<!-- Mensagens de Sucesso -->
@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        @TempData["SuccessMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}


<!-- Tabela de Usuários -->
<table class="table table-striped table-hover">
    <thead class="table-dark">
        <tr>
            <th>Email</th>
            <th>Roles</th>
            <th>Ações</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var user in Model)
        {
            var roles = await UserManager.GetRolesAsync(user);
            var isCurrentUser = user.Id == UserManager.GetUserId(User); // Verifica se é o usuário logado

            <tr>
                <td>@user.Email</td>
                <td>@string.Join(", ", roles)</td>
                <td>
                    <a asp-action="Edit" asp-route-id="@user.Id" class="btn btn-sm btn-warning me-2">
                        Editar
                    </a>
                    <a asp-action="Delete" asp-route-id="@user.Id"
                       class="btn btn-sm btn-danger @(isCurrentUser ? "disabled" : "")"
                       onclick="return @(isCurrentUser ? "false" : "confirm('Tem certeza que deseja excluir este usuário?')");">
                        Excluir
                    </a>
                </td>
            </tr>
        }
    </tbody>
</table>
